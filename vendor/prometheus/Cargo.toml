# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2018"
rust-version = "1.81"
name = "prometheus"
version = "0.14.0"
authors = [
    "overvenus@gmail.com",
    "siddontang@gmail.com",
    "vistaswx@gmail.com",
]
build = "build.rs"
autobins = false
autoexamples = false
autotests = false
autobenches = false
description = "Prometheus instrumentation library for Rust applications."
homepage = "https://github.com/tikv/rust-prometheus"
documentation = "https://docs.rs/prometheus"
readme = "README.md"
keywords = [
    "prometheus",
    "metrics",
]
license = "Apache-2.0"
repository = "https://github.com/tikv/rust-prometheus"

[package.metadata.docs.rs]
features = ["nightly"]

[lib]
name = "prometheus"
path = "src/lib.rs"

[[example]]
name = "example_custom_registry"
path = "examples/example_custom_registry.rs"

[[example]]
name = "example_edition_2018"
path = "examples/example_edition_2018.rs"

[[example]]
name = "example_embed"
path = "examples/example_embed.rs"

[[example]]
name = "example_hyper"
path = "examples/example_hyper.rs"

[[example]]
name = "example_int_metrics"
path = "examples/example_int_metrics.rs"

[[example]]
name = "example_process_collector"
path = "examples/example_process_collector.rs"
required-features = ["process"]

[[example]]
name = "example_push"
path = "examples/example_push.rs"
required-features = ["push"]

[[bench]]
name = "atomic"
path = "benches/atomic.rs"
harness = false

[[bench]]
name = "counter"
path = "benches/counter.rs"
harness = false

[[bench]]
name = "desc"
path = "benches/desc.rs"
harness = false

[[bench]]
name = "gauge"
path = "benches/gauge.rs"
harness = false

[[bench]]
name = "histogram"
path = "benches/histogram.rs"
harness = false

[[bench]]
name = "text_encoder"
path = "benches/text_encoder.rs"
harness = false

[dependencies.cfg-if]
version = "^1.0"

[dependencies.fnv]
version = "^1.0"

[dependencies.lazy_static]
version = "^1.4"

[dependencies.libc]
version = "^0.2"
optional = true

[dependencies.memchr]
version = "^2.3"

[dependencies.parking_lot]
version = "^0.12"

[dependencies.protobuf]
version = "^3.7.2"
optional = true

[dependencies.reqwest]
version = "^0.12"
features = ["blocking"]
optional = true

[dependencies.thiserror]
version = "^2.0"

[dev-dependencies.criterion]
version = "0.5"

[dev-dependencies.getopts]
version = "^0.2"

[dev-dependencies.hyper]
version = "^1.6"
features = [
    "http1",
    "server",
]

[dev-dependencies.hyper-util]
version = "^0.1"
features = [
    "http1",
    "server",
    "tokio",
]

[dev-dependencies.tokio]
version = "^1.0"
features = [
    "macros",
    "net",
    "rt-multi-thread",
]

[build-dependencies.protobuf-codegen]
version = "^3.7.2"
optional = true

[features]
default = ["protobuf"]
gen = ["protobuf-codegen"]
nightly = ["libc"]
process = [
    "libc",
    "procfs",
]
push = [
    "reqwest",
    "libc",
    "protobuf",
]

[target.'cfg(target_os = "linux")'.dependencies.procfs]
version = "^0.17"
optional = true
default-features = false
