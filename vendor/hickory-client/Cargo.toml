# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
rust-version = "1.71.1"
name = "hickory-client"
version = "0.24.4"
authors = ["The contributors to Hickory DNS"]
build = false
autolib = false
autobins = false
autoexamples = false
autotests = false
autobenches = false
description = """
Hickory DNS is a safe and secure DNS library. This is the Client library with DNSSEC support.
 DNSSEC with NSEC validation for negative records, is complete. The client supports
 dynamic DNS with SIG0 authenticated requests, implementing easy to use high level
 funtions. Hickory DNS is based on the Tokio and Futures libraries, which means
 it should be easily integrated into other software that also use those
 libraries.
"""
homepage = "https://hickory-dns.org/"
documentation = "https://docs.rs/hickory-client"
readme = "README.md"
keywords = [
    "DNS",
    "BIND",
    "dig",
    "named",
    "dnssec",
]
categories = ["network-programming"]
license = "MIT OR Apache-2.0"
repository = "https://github.com/hickory-dns/hickory-dns"

[package.metadata.docs.rs]
all-features = true
default-target = "x86_64-unknown-linux-gnu"
rustdoc-args = [
    "--cfg",
    "docsrs",
]
targets = [
    "x86_64-apple-darwin",
    "x86_64-pc-windows-msvc",
]

[lib]
name = "hickory_client"
path = "src/lib.rs"

[dependencies.cfg-if]
version = "1"

[dependencies.data-encoding]
version = "2.2.0"

[dependencies.futures-channel]
version = "0.3.5"
features = ["std"]
default-features = false

[dependencies.futures-util]
version = "0.3.5"
features = ["std"]
default-features = false

[dependencies.hickory-proto]
version = "0.24.0"
features = [
    "text-parsing",
    "tokio-runtime",
]
default-features = false

[dependencies.once_cell]
version = "1.18.0"

[dependencies.radix_trie]
version = "0.2.0"

[dependencies.rand]
version = "0.8"

[dependencies.rustls]
version = "0.21.6"
optional = true

[dependencies.serde]
version = "1.0"
features = ["derive"]
optional = true

[dependencies.thiserror]
version = "1.0.20"

[dependencies.tokio]
version = "1.21"
features = [
    "rt",
    "net",
]

[dependencies.tracing]
version = "0.1.30"

[dev-dependencies.futures]
version = "0.3.5"
features = [
    "std",
    "executor",
]
default-features = false

[dev-dependencies.openssl]
version = "0.10.55"
features = [
    "v102",
    "v110",
]
optional = false

[dev-dependencies.tokio]
version = "1.21"
features = [
    "rt",
    "macros",
]

[dev-dependencies.tracing-subscriber]
version = "0.3"
features = [
    "std",
    "fmt",
    "env-filter",
]

[features]
backtrace = ["hickory-proto/backtrace"]
dns-over-https = ["hickory-proto/dns-over-https"]
dns-over-https-openssl = [
    "dns-over-https",
    "dns-over-openssl",
]
dns-over-https-rustls = [
    "dns-over-https",
    "dns-over-rustls",
    "rustls",
    "hickory-proto/dns-over-https-rustls",
]
dns-over-native-tls = [
    "dns-over-tls",
    "hickory-proto/dns-over-native-tls",
]
dns-over-openssl = [
    "dns-over-tls",
    "dnssec-openssl",
]
dns-over-quic = [
    "dns-over-rustls",
    "hickory-proto/dns-over-quic",
]
dns-over-rustls = [
    "dns-over-tls",
    "dnssec-ring",
    "hickory-proto/dns-over-rustls",
]
dns-over-tls = []
dnssec = ["hickory-proto/dnssec"]
dnssec-openssl = [
    "dnssec",
    "hickory-proto/dnssec-openssl",
]
dnssec-ring = [
    "dnssec",
    "hickory-proto/dnssec-ring",
]
mdns = ["hickory-proto/mdns"]
native-certs = ["hickory-proto/native-certs"]
serde-config = [
    "serde",
    "hickory-proto/serde-config",
]
webpki-roots = ["hickory-proto/webpki-roots"]

[badges.codecov]
branch = "main"
repository = "hickory-dns/hickory-dns"
service = "github"

[badges.maintenance]
status = "actively-developed"

[lints.rust.unexpected_cfgs]
level = "warn"
priority = 0
check-cfg = ["cfg(nightly)"]
